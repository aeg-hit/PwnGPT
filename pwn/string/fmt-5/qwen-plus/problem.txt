Challenge is a ELF 32-bit LSB executable file and the file path is "./pwn/string/fmt-5/fmt5".
1.Here is the key function for exploit in the C file decompiled from fmt5:
void *init_proc()
{
  void *result; // eax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    return (void *)_gmon_start__();
  return result;
}

int sub_80483D0()
{
  return dword_804A008();
}

void __usercall __noreturn start(int a1@<eax>, void (*a2)(void)@<edx>)
{
  int v2; // esi
  int v3; // [esp-4h] [ebp-4h] BYREF
  char *retaddr; // [esp+0h] [ebp+0h] BYREF

  v2 = v3;
  v3 = a1;
  __libc_start_main((int (__cdecl *)(int, char **, char **))main, v2, &retaddr, _libc_csu_init, _libc_csu_fini, a2, &v3);
  __halt();
}

void _x86_get_pc_thunk_bx()
{
  ;
}

int deregister_tm_clones()
{
  int result; // eax

  result = &unk_804A02F - &_bss_start;
  if ( (unsigned int)(&unk_804A02F - &_bss_start) > 6 )
    return 0;
  return result;
}

int register_tm_clones()
{
  return 0;
}

int _do_global_dtors_aux()
{
  int result; // eax

  if ( !completed_7209 )
  {
    result = deregister_tm_clones();
    completed_7209 = 1;
  }
  return result;
}

int frame_dummy()
{
  return register_tm_clones();
}

void _libc_csu_init(void)
{
  int v0; // esi
  int i; // edi

  init_proc();
  v0 = ((char *)&_do_global_dtors_aux_fini_array_entry
      - ((char *)&_frame_dummy_init_array_entry[-33630208]
       + (_DWORD)&GLOBAL_OFFSET_TABLE_)) >> 2;
  if ( v0 )
  {
    for ( i = 0; i != v0; ++i )
      _frame_dummy_init_array_entry[i]();
  }
}

void term_proc()
{
  ;
}

int __cdecl __noreturn main(int argc, const char **argv, const char **envp)
{
  char buf[100]; // [esp+8h] [ebp-70h] BYREF
  unsigned int v4; // [esp+6Ch] [ebp-Ch]

  v4 = __readgsdword(0x14u);
  setbuf(stdin, 0);
  setbuf(stdout, 0);
  setbuf(stderr, 0);
  puts("Do you know repeater?");
  while ( 1 )
  {
    read(0, buf, 0x64u);
    printf(buf);
    putchar(10);
  }
}

2.Here is the file security infomation identified by 'checksec' command:
{"relro": "partial", "canary": "no", "nx": "yes", "pie": "no", "rpath": "no", "runpath": "no", "symbols": "yes", "fortify_source": "no", "fortified": "0", "fortify-able": "2"}

3.We use ROPgadget to search gadgets on fmt5:
Gadgets information
============================================================
0x0804864b : pop ebp ; ret
0x08048648 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x080483c1 : pop ebx ; ret
0x0804864a : pop edi ; pop ebp ; ret
0x08048649 : pop esi ; pop edi ; pop ebp ; ret
0x0804819b : ret
0x080484ce : ret 0xeac1

Unique gadgets found: 7

4.Here is information of the file's relocation section:
Relocation section '.rel.plt' at offset 0x370 contains 6 entries:
 Offset     Info    Type            Sym.Value  Sym. Name
0804a00c  00000107 R_386_JUMP_SLOT   00000000   setbuf@GLIBC_2.0
0804a010  00000207 R_386_JUMP_SLOT   00000000   read@GLIBC_2.0
0804a014  00000307 R_386_JUMP_SLOT   00000000   printf@GLIBC_2.0
0804a018  00000407 R_386_JUMP_SLOT   00000000   puts@GLIBC_2.0
0804a01c  00000607 R_386_JUMP_SLOT   00000000   __libc_start_main@GLIBC_2.0
0804a020  00000707 R_386_JUMP_SLOT   00000000   putchar@GLIBC_2.0

