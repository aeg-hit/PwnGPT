Challenge is a ELF 64-bit LSB pie executable file and the file path is "./pwn/stack/rop-10/rop10".
1.Here is the key function for exploit in the C file decompiled from rop10:
void init()
{
  setbuf(stdin, 0LL);
  setbuf(stdout, 0LL);
  setbuf(stderr, 0LL);
}

int hello()
{
  char s1[16]; // [rsp+0h] [rbp-30h] BYREF
  char buf[24]; // [rsp+10h] [rbp-20h] BYREF
  unsigned __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = __readfsqword(0x28u);
  puts("Hello. What\'s your name?");
  read(0, buf, 0x100uLL);
  printf("Is your name `%s` correct (yes/no)?\n", buf);
  read(0, s1, 0x100uLL);
  return strncmp(s1, "yes", 3uLL);
}

int __fastcall main(int argc, const char **argv, const char **envp)
{
  init(argc, argv, envp);
  while ( (unsigned int)hello() )
    ;
  puts("See you~");
  return 0;
}

2.Here is the file security infomation identified by 'checksec' command:
{"relro": "full", "canary": "yes", "nx": "yes", "pie": "yes", "rpath": "no", "runpath": "yes", "symbols": "yes", "fortify_source": "no", "fortified": "0", "fortify-able": "2"}

3.We use ROPgadget to search gadgets on rop10:
Gadgets information
============================================================
0x00000000000011d3 : pop rbp ; ret
0x000000000000101a : ret

Unique gadgets found: 2

